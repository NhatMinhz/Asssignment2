@page
@model FUNewsManagementSystem.Pages.NewsArticles.IndexModel

@{
    ViewData["Title"] = "News Articles";
}

<h1 class="mb-4"><i class="fas fa-newspaper"></i> News Articles</h1>

<!-- Search Bar -->
<div class="card mb-4 shadow-sm border-0">
    <div class="card-body">
        <form method="get" class="d-flex align-items-center gap-2">
            <input type="text" name="searchTitle" class="form-control" placeholder="Search by News Title..." value="@Model.SearchTitle" />

            <select name="categoryFilter" class="form-select">
                <option value="">-- Select Category --</option>
                @foreach (var category in Model.Categories)
                {
                    <option value="@category.CategoryId" selected="@(Model.CategoryFilter == category.CategoryId ? "selected" : null)">
                        @category.CategoryName
                    </option>
                }
            </select>

            <button type="submit" class="btn btn-primary"><i class="fas fa-search"></i> Search</button>
            <a asp-page="Index" class="btn btn-secondary"><i class="fas fa-sync-alt"></i> Reset</a>
        </form>
    </div>
</div>

<p>
    <a asp-page="./Create" class="btn btn-success mb-3"><i class="fas fa-plus"></i> Create New</a>
    @if (User.IsInRole("Admin"))
    {
        <a asp-page="./Report" class="btn btn-secondary mb-3"><i class="fas fa-chart-bar"></i> Report</a>
    }
</p>

<table class="table table-hover table-striped shadow-sm rounded">
    <thead class="table-dark">
        <tr>
            <th>News Title</th>
            <th>Headline</th>
            <th>Created Date</th>
            <th>News Source</th>
            <th>News Status</th>
            <th>Category</th>
            <th>Created By</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.NewsArticles)
        {
            <tr>
                <td>@item.NewsTitle</td>
                <td>@item.Headline</td>
                <td>@item.CreatedDate?.ToString("yyyy-MM-dd")</td>
                <td>@item.NewsSource</td>
                <td>
                    <span class="badge rounded-pill @(item.NewsStatus ? "bg-success" : "bg-warning")">
                        @(item.NewsStatus ? "Published" : "Draft")
                    </span>
                </td>
                <td>@(item.Category != null ? item.Category.CategoryName : "None")</td>
                <td>@(item.CreatedBy != null ? item.CreatedBy.AccountName : "Unknown")</td>
                <td>
                    <a asp-page="/NewsArticles/Details" asp-route-id="@item.NewsArticleId" class="btn btn-info btn-sm">
                        <i class="fas fa-eye"></i> Details
                    </a>

                    @if (User.IsInRole("Staff"))
                    {
                        <a asp-page="/NewsArticles/Edit" asp-route-id="@item.NewsArticleId" class="btn btn-warning btn-sm">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <a asp-page="/NewsArticles/Delete" asp-route-id="@item.NewsArticleId" class="btn btn-danger btn-sm" onclick="return confirmDelete();">
                            <i class="fas fa-trash"></i> Delete
                        </a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>

    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/newsHub")  
            .configureLogging(signalR.LogLevel.Information)
            .build();

        connection.start().catch(function (err) {
            console.error(err.toString());
        });

        connection.on("ReceiveNewsUpdate", function (article) {
            alert("News Updated: " + article.newsTitle);
            location.reload(); 
        });

        connection.on("ReceiveNewsEdit", function (article) {
            alert("News Edited: " + article.newsTitle);
            location.reload();
        });

        connection.on("ReceiveNewsDelete", function (articleId) {
            alert("News Article Deleted: " + articleId);
            location.reload();
        });
    </script>
}

